/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.chrometabs;

import java.util.ArrayList;
import java.util.List;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;

import android.content.Context;
import android.content.Intent;
import android.content.pm.ResolveInfo;
import android.net.Uri;
import android.support.customtabs.CustomTabsIntent;
import android.support.customtabs.CustomTabsService;


@Kroll.module(name="Tichrometabs", id="ti.chrometabs")
public class TichrometabsModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "TichrometabsModule";

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TichrometabsModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}
	
	private List<String> getCustomTabBrowsers(Context context, List<ResolveInfo> browsersList) {
        List<String> customTabBrowsers = new ArrayList<String>();
        
        for (ResolveInfo info : browsersList) {
        	String packageName = info.activityInfo.packageName;
            
        	Intent intent = new Intent();
            intent.setAction(CustomTabsService.ACTION_CUSTOM_TABS_CONNECTION);
            intent.setPackage(packageName);
            
            if (context.getPackageManager().resolveService(intent, 0) != null) {
            	customTabBrowsers.add(packageName);
            }
        }
        
        return customTabBrowsers;
    }
	
	private void openCustomTab(Context context, List<String> customTabBrowsers, KrollDict options) {
		String URL = options.getString(Params.URL);
		URL = URL.toLowerCase();
		
		if (!URL.startsWith("http")) {
			URL = "http://" + URL;
		}
		
		CustomTabsIntent.Builder builder = new CustomTabsIntent.Builder();
		builder.setShowTitle(Utils.getBool(options, Params.SHOW_TITLE));
		
		int color = Utils.getColor(options, Params.TOOLBAR_COLOR);
		if (color != -1) {
			builder.setToolbarColor(color);
		}
		
		// set start and exit animations
		if (Utils.getBool(options, Params.FADE_TRANSITION)) {
	        builder.setStartAnimations(context, android.R.anim.fade_in, android.R.anim.fade_out);
	        builder.setExitAnimations(context, android.R.anim.fade_in, android.R.anim.fade_out);
		}

        CustomTabsIntent tabIntent = builder.build();
        
        for(String s:customTabBrowsers) {
        	tabIntent.intent.setPackage(s);
        }
        
        tabIntent.launchUrl(context, Uri.parse(URL));
	}

	@Kroll.method
	public boolean openURL(KrollDict options) {
		if ( (options != null) && options.containsKeyAndNotNull(Params.URL)) {
			Context context = TiApplication.getAppCurrentActivity();
			List<ResolveInfo> browsersList = Utils.allBrowsers(context);
			
			if (!browsersList.isEmpty()) {
				List<String> customTabBrowsers = getCustomTabBrowsers(context, browsersList);				
				
				// show supported browsers list or open directly if only 1 supported browser is available
				openCustomTab(context, customTabBrowsers, options);
		        
				return true;
				
			} else {
				Log.i(Params.LCAT, "No browsers available in this device.");
				return false;
			}
		}
		
		Log.i(Params.LCAT, "Check your paramters. URL parameter is mandatory.");
		return false;
	}
}


